# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main", "ci" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  PTYCHO_CI_DATA_DIR: /local/ptycho_aux_data/ci_data
  PODMAN_GPU_ARGS: "--hooks-dir=/usr/share/containers/oci/hooks.d/"

permissions:
  contents: read

jobs:
  lint:
    defaults:
      run:
        shell: bash -l {0}

    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3

      - name: Create environment
        id: create_env
        run: |
          uv venv --python 3.11 .venv_lint
          source .venv_lint/bin/activate

      - name: Install Ruff
        run: |
          source .venv_lint/bin/activate
          uv pip install ruff==0.11.12

      - name: Run Ruff
        run: |
          source .venv_lint/bin/activate
          ruff check src/ --output-format=github

  linux-x86-gpu:

    defaults:
      run:
        shell: bash -l {0}

    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3

      - name: Update test data
        id: update_test_data
        run: |
          PACKAGE_DIR=$(pwd)
          cd $PTYCHO_CI_DATA_DIR
          git pull origin main
          cd $PACKAGE_DIR

      - name: Run tests in container
        env:
          PTYCHO_CI_DATA_DIR: ${{ env.PTYCHO_CI_DATA_DIR }}
        run: |
          podman run --rm \
            ${PODMAN_GPU_ARGS:-} \
            -v "${PWD}:/workspace" \
            -v "${PTYCHO_CI_DATA_DIR}:${PTYCHO_CI_DATA_DIR}" \
            -e PTYCHO_CI_DATA_DIR="${PTYCHO_CI_DATA_DIR}" \
            -e NVIDIA_VISIBLE_DEVICES=all \
            -e NVIDIA_DRIVER_CAPABILITIES=compute,utility \
            -w /workspace \
            ghcr.io/astral-sh/uv:python3.11-bookworm \
            bash -lc '
              set -euo pipefail

              uv sync --locked --python 3.11

              uv run python --version
              uv run python -m pip list

              uv run pytest -s --high-tol --save-timing tests

              rm -rf .venv
            '
